name: E2E Tests

on:
  workflow_run:
    workflows: ["Test and Build"]
    branches: [main]
    types: 
      - completed

jobs:
  e2e:
    name: e2e
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      IMG_BASE: ghcr.io/drzzlio/kms-issuer
      CERT_MANAGER_VERSION: v1.13.5
    permissions:
      id-token: write # This is required for requesting the JWT for GCP OIDC federation
      contents: read  # This is required for actions/checkout
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Authenticate to Google Cloud
        id: gcpauth
        uses: google-github-actions/auth@v2.1.2
        with:
          workload_identity_provider: projects/726581429530/locations/global/workloadIdentityPools/github/providers/github
          service_account: kmsissuer-tester@gptops-playground.iam.gserviceaccount.com

      - name: Set IMG env var to previously-built image
        run: echo "IMG=${IMG_BASE}:sha-`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      # Setup kind cluster
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.9.0
        with:
          cluster_name: kind

      - name: Install cert-manager
        run: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/${CERT_MANAGER_VERSION}/cert-manager.yaml

      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install kms-issuer CRDs
        run: make install

      - name: Set docker image to use in Kustomization
        run: make kustomize && cd config/manager && kustomize edit set image controller=${IMG}

      - name: Create kmsissuer namespace
        run: kubectl create namespace kms-issuer-system
          
      - name: Install GCP auth secret
        run: kubectl create -n kms-issuer-system secret generic kmsissueradc --from-file=gadcreds.json=${GOOGLE_APPLICATION_CREDENTIALS}

      - name: Deploy kms-issuer controller
        run: kustomize build config/testing | kubectl apply -f -

      - name: Deploy test kms-issuer
        run: kubectl apply -f ./config/testing/test-kmsissuer.yaml
      - name: Wait for KMSIssuer to be ready
        run: kubectl wait --for=condition=Ready kmsissuer/kms-issuer-test

      - name: Deploy test Certificate
        run: kubectl apply -f ./config/testing/certificate.yaml
      - name: Wait for Certificate to be ready  
        run: kubectl wait --for=condition=Ready certificate.cert-manager.io/example-com

      - name: Delete certificate
        run: kubectl delete -f ./config/samples/certificate.yaml
      - name: Delete KMSIssuer
        run: kubectl delete -f ./config/samples/cert-manager_v1alpha1_kmsissuer.yaml

      - name: Logs of controller
        if: always()
        run: |
          echo "::group::Controller logs"
          kubectl logs deployment/kms-issuer-controller-manager -n kms-issuer-system --all-containers
          echo "::endgroup::"
